/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package operacionespolinomios;

import java.util.regex.Pattern;

/**
 *
 * @author Carolina
 */
public class OperaPolinomios extends javax.swing.JFrame {

    String entrada1;
    String entrada2;
    Polinomio primerPol;
    Polinomio segundoPol;
    Polinomio tercerPol;

    
    
    /**
     * Separa el polinomio para ser ingresado en una lista ligada
     * @param pPolinomio String
     * @return un polinomio
     */
    public static Polinomio SepararPolinomio(String pPolinomio){ 
        Polinomio unPolinomio = new Polinomio();
        String ingreso = pPolinomio;
        String partes[];
        String separar[];
        partes = ingreso.split(Pattern.quote("+"));
        for(int i = 0; i<partes.length; i++){
            separar = partes[i].split(Pattern.quote("X"));
            int a = Integer.parseInt(separar[0]);
            int b = Integer.parseInt(separar[1]);
            unPolinomio.AlmacenarTermino(a, b);
        }
        return unPolinomio;
    }    
    public OperaPolinomios() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        PolinomioA = new javax.swing.JTextField();
        PolinomioB = new javax.swing.JTextField();
        Sumar = new javax.swing.JButton();
        MultiplicarCoef = new javax.swing.JButton();
        MutiplicarPolinomios = new javax.swing.JButton();
        Derivar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Coeficiente = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        Resultado = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        jLabel2.setText("Ingrese Polinomios");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, -1, -1));

        PolinomioA.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        PolinomioA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PolinomioAActionPerformed(evt);
            }
        });
        getContentPane().add(PolinomioA, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 170, 30));

        PolinomioB.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        PolinomioB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PolinomioBActionPerformed(evt);
            }
        });
        getContentPane().add(PolinomioB, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 100, 170, 30));

        Sumar.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        Sumar.setText("Sumar dos polinomios");
        Sumar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SumarActionPerformed(evt);
            }
        });
        getContentPane().add(Sumar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 200, -1));

        MultiplicarCoef.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        MultiplicarCoef.setText("Multiplicar por coeficiente");
        MultiplicarCoef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MultiplicarCoefActionPerformed(evt);
            }
        });
        getContentPane().add(MultiplicarCoef, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 200, -1));

        MutiplicarPolinomios.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        MutiplicarPolinomios.setText("Multiplicar dos polinomios");
        MutiplicarPolinomios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MutiplicarPolinomiosActionPerformed(evt);
            }
        });
        getContentPane().add(MutiplicarPolinomios, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 200, -1));

        Derivar.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        Derivar.setText("Derivar polinomio");
        Derivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DerivarActionPerformed(evt);
            }
        });
        getContentPane().add(Derivar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 200, -1));

        jLabel3.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        jLabel3.setText("Polinomio A:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));

        jLabel4.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        jLabel4.setText("Polinomio B:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 80, -1, -1));

        jLabel5.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        jLabel5.setText("Coeficiente:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));
        getContentPane().add(Coeficiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 110, 30));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Resultado.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        jPanel1.add(Resultado, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 220, 210, 80));

        jLabel1.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        jLabel1.setText("Resultado");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 190, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 360));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PolinomioAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PolinomioAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PolinomioAActionPerformed

    private void PolinomioBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PolinomioBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PolinomioBActionPerformed

    private void SumarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SumarActionPerformed
        Calculadora calcular = new Calculadora();
        entrada1 = PolinomioA.getText();
        entrada2 = PolinomioB.getText();
        primerPol = SepararPolinomio(entrada1.toUpperCase());
        segundoPol = SepararPolinomio(entrada2.toUpperCase());
        Resultado.setText(calcular.Sumar(primerPol, segundoPol));
    }//GEN-LAST:event_SumarActionPerformed

    private void MultiplicarCoefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MultiplicarCoefActionPerformed
        Polinomio polinom = new Polinomio();
        entrada1 = PolinomioA.getText();
        primerPol = SepararPolinomio(entrada1.toUpperCase());
        int x = Integer.parseInt(Coeficiente.getText());
        Resultado.setText(polinom.MultiplicarPorCoef(primerPol, x));
    }//GEN-LAST:event_MultiplicarCoefActionPerformed

    private void MutiplicarPolinomiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MutiplicarPolinomiosActionPerformed
        Calculadora calcular = new Calculadora();
        entrada1 = PolinomioA.getText();
        entrada2 = PolinomioB.getText();
        primerPol = SepararPolinomio(entrada1.toUpperCase());
        segundoPol = SepararPolinomio(entrada2.toUpperCase());
        Resultado.setText(calcular.Multiplicar(primerPol, segundoPol));
    }//GEN-LAST:event_MutiplicarPolinomiosActionPerformed

    private void DerivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DerivarActionPerformed
        Calculadora calcular = new Calculadora();
        entrada1 = PolinomioA.getText();
        primerPol = SepararPolinomio(entrada1.toUpperCase());
        Resultado.setText(calcular.Derivar(primerPol));
    }//GEN-LAST:event_DerivarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OperaPolinomios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OperaPolinomios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OperaPolinomios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OperaPolinomios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OperaPolinomios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Coeficiente;
    private javax.swing.JButton Derivar;
    private javax.swing.JButton MultiplicarCoef;
    private javax.swing.JButton MutiplicarPolinomios;
    private javax.swing.JTextField PolinomioA;
    private javax.swing.JTextField PolinomioB;
    private javax.swing.JTextField Resultado;
    private javax.swing.JButton Sumar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
